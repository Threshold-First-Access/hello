version: 2
definitions:
  build_defaults: &build_defaults
    working_directory: ~/app
    docker:
      - image: circleci/node:8.10-browsers
  test_defaults: &test_defaults
    working_directory: ~/app
    docker:
      - image: circleci/node:8.10-browsers
jobs:
  checkout_code:
    <<: *build_defaults
    steps:
      - checkout
      - run:
        name: Version command
        command: yarn -v
  bundle_dependencies:
    <<: *build_defaults
    steps:
      - bundle
      - restore_cache:
          keys:
            - v1-hello-app-yarn-deps-{{ checksum "yarn.lock" }}
            - v1-hello-app-yarn-deps-
      - run:
        name: Install dependencies
        command: yarn install --frozen-lockfile
      - save_cache:
          key: 
            - v1-hello-app-yarn-deps-{{ checksum "yarn.lock" }}
          paths:
            - ~/app/node_modules
  lint:
    <<: *build_defaults
    steps:
      - lint
      - restore_cache:
          keys:
            - v1-hello-app-yarn-deps-{{ checksum "yarn.lock" }}
      - run:
          name: Run Linter
          command: yarn lint
  test:
    <<: *build_defaults
    steps:
      - test
      - restore_cache:
          keys:
            - v1-hello-app-yarn-deps-{{ checksum "yarn.lock" }}
      - run:
          name: Runnimg Tests
          command: yarn test          
  build_docker_image:
    <<: *build_defaults
    steps:
      - build_docker
      - run:
        name: Version command
        command: ls  # This is to test the ci flow        
  build_and_push:
    <<: *build_defaults
    steps:
      - build_and_push
      - run:
        name: Version command
        command: ls  # This is to test the ci flow         
  plan:
    <<: *build_defaults
    steps:
      - plan
      - run:
        name: Version command
        command: ls  # This is to test the ci flow         
  deploy:
    <<: *build_defaults  
    steps:
      - deploy
      - run:
        name: Version command
        command: ls  # This is to test the ci flow                   
workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - checkout_code:
          filters:
            tags:
              only: latest
      - bundle_dependencies:
          requires:
            - checkout_code
          filters:
            tags:
              only: latest
      - lint:
          requires:
            - bundle_dependencies
          filters:
            tags:
              only: latest
      - test:
          requires:
            - bundle_dependencies
          filters:
            tags:
              only: latest
      - build_docker_image:
          context: org-global
          requires:
            - lint
            - test
          filters:
            tags:
              ignore: latest
            branches:
              ignore: [master, develop]
      - build_and_push:
          context: org-global
          requires:
            - lint
            - test
          filters:
            tags:
              only: latest
            branches:
              only: [master, develop]
      - plan:
          context: org-global
          requires:
            - build_and_push
          filters:
            tags:
              only: latest
            branches:
              only: [master, develop]
      - production_deploy_hold:
          type: approval
          requires:
            - plan
          filters:
            tags:
              only: latest
            branches:
              only: [master]
      - deploy:
          context: org-global
          requires:
            - production_deploy_hold
            - plan
          filters:
            tags:
              only: latest
            branches:
              only: [master, develop]      